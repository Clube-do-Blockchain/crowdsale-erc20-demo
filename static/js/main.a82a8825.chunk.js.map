{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Demo/BLKTokenSale.jsx","components/Demo/BLKTokenKYC.jsx","components/Demo/Title.jsx","components/Demo/AddressList.jsx","components/Demo/index.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","web3","accounts","networkID","contractInstances","item","cost","name","reducer","state","action","type","data","Error","getArtifacts","artifacts","push","require","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","initArtifacts","artifact","abi","contractName","address","contract","networks","Contract","err","console","error","useEffect","tryInit","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","BLKTokenSale","notifySuccess","message","toast","style","border","color","background","notifyError","useState","balanceValue","setBalanceValue","toAddressValue","setToAddressValue","toAmountValue","setToAmountValue","BLKToken","_address","tokenSaleAddress","quantityValue","setQuantityValue","clearForm","getBalance","methods","balanceOf","call","balance","transfer","target","tagName","send","from","Transfer","to","once","event","listenToTokenTransferEvents","BuyTokens","newValue","parseFloat","buyTokens","utils","toWei","toString","marginTop","width","borderRadius","padding","marginRight","marginLeft","textAlign","display","margin","overflowWrap","className","marginInline","placeholder","step","onChange","onClick","backgroundColor","cursor","marginBottom","BLKTokenKYC","setAddressesValue","addressValue","setAddressValue","allow","alert","completed","getListOfTokens","revoke","revoked","getListOfAddress","addresses","float","minWidth","Title","AddressList","copyText","text","el","innerText","navigator","clipboard","writeText","then","log","listItems","map","number","pointerEvents","str","n","length","slice","hidden","listStyleType","Demo","addressesValue","kyc","sale","getAddresses","blkSaleKYCLoaded","blkSaleIsLoaded","App","id","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a82a8825.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\n\nconst initialState = {\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contractInstances: null,\n  item: {\n    cost: null,\n    name: null\n  }\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nconst getArtifacts = () => {\n  const artifacts = []\n\n  artifacts.push(require(\"../../contracts/BLKToken.json\"));\n  artifacts.push(require(\"../../contracts/BLKTokenKYC.json\"));\n  artifacts.push(require(\"../../contracts/BLKTokenSale.json\"));\n\n  return artifacts;\n}\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifacts => {\n      if (artifacts) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const contractInstances = {};\n        const initArtifacts = (artifacts) => {\n          for (const artifact of artifacts) {\n            \n            const { abi, contractName } = artifact;\n            let address, contract;\n\n            try {\n              address = artifact.networks[networkID] && artifact.networks[networkID].address;\n              contract = new web3.eth.Contract(abi, address);\n            } catch (err) {\n              console.error(err);\n            }\n            \n            contractInstances[contractName] = {\n              contract,\n              artifact\n            };\n\n            dispatch({\n              type: actions.init,\n              data: { contractInstances, web3, accounts, networkID }\n            });\n          }\n          \n        }\n\n        initArtifacts(artifacts);\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        init(getArtifacts());\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(getArtifacts());\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport toast from \"react-hot-toast\";\n\nfunction BLKTokenSale() {\n    const notifySuccess = (message) => toast(message, {\n        style: {\n            border: '2px solid white',\n            color: \"white\",\n            background: \"green\"\n        },\n    });\n\n    const notifyError = (message) => toast(message, {\n        style: {\n            border: '2px solid white',\n            color: \"white\",\n            background: \"red\"\n        },\n    });\n    const { state: { contractInstances, accounts, web3 } } = useEth();\n    const [balanceValue, setBalanceValue] = useState(\"0\");\n    const [toAddressValue, setToAddressValue] = useState(\"\");\n    const [toAmountValue, setToAmountValue] = useState(\"\");\n\n    const BLKToken = contractInstances.BLKToken;\n    const BLKTokenSale = contractInstances.BLKTokenSale;\n\n    const [tokenSaleAddress,] = useState(BLKTokenSale.contract._address);\n\n    const [quantityValue, setQuantityValue] = useState(0.1);\n\n    const handleInputCostChange = e => {\n        setQuantityValue(e.target.value);\n    };\n\n    const handleInputToAmountChange = e => {\n        setToAmountValue(e.target.value);\n    };\n\n    const handleInputToAddressChange = e => {\n        setToAddressValue(e.target.value);\n    };\n\n    const clearForm = () => {\n        setQuantityValue(\"\")\n        setToAddressValue(\"\")\n        setToAmountValue(\"\")\n    }\n\n    const listenToTokenTransferEvents = () => {\n        try {\n            BLKToken.contract.events.Transfer({ to: accounts[0] }).once(\"data\", async (event) => {\n                getBalance();\n            })\n        } catch (e) {\n            notifyError(\"Contract is not connected to the right network. Try change to Goerli\")\n        }\n        \n    }\n\n    const getBalance = async () => {\n        try {\n            const balance = await BLKToken.contract.methods.balanceOf(accounts[0]).call();\n            setBalanceValue(balance);\n        } catch (e) {\n            notifyError(\"Contract is not connected to the right network. Try change to Goerli\")\n        }\n    }\n\n\n    const transfer = async e => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n\n        if (toAddressValue === \"\") {\n            notifyError(\"Please enter a string to address.\")\n            return;\n        }\n        if (toAmountValue === \"\") {\n            notifyError(\"Please enter a valid amount.\")\n            return;\n        }\n        try {\n            notifySuccess(\"Sending transaction..\")\n            await BLKToken.contract.methods.transfer(toAddressValue, toAmountValue).send({ from: accounts[0] });\n            notifySuccess(\"Transaction Sent.\")\n        } catch (error) {\n            notifyError(error.message)\n        } finally {\n            clearForm();\n        }\n\n    };\n\n    listenToTokenTransferEvents();\n    getBalance();\n\n    const BuyTokens = async e => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n        if (quantityValue === \"\") {\n            notifyError(\"Please enter a value (ether)\");\n            return;\n        }\n\n        const newValue = parseFloat(quantityValue);\n\n        await BLKTokenSale.contract.methods.buyTokens(accounts[0]).send({ from: accounts[0], value: web3.utils.toWei(newValue.toString(), \"ether\") });\n\n        clearForm();\n    };\n\n    return (\n        <div\n            style={{ marginTop: \"16px\", width: \"90%\", border: \"1px solid black\", borderRadius: \"2px\", padding: \"10px\", marginRight: \"auto\", marginLeft: \"auto\" }}>\n            <div style={{ textAlign: \"center\" }} >\n                <h3 style={{ display: \"block\", textAlign: \"center\", margin: \"10px\" }}> BLKT </h3>\n                <div\n                    style={{ display: \"block\", textAlign: \"center\", margin: \"10px\" }}>\n                    To buy tokens send ETH to\n                    <br />\n                    <div style={{ overflowWrap: \"anywhere\"}}> {tokenSaleAddress}</div>\n                    <br />\n                    <strong>1000 BLKT / 1 ETH</strong>\n                    <br />\n                </div>\n\n\n                <div className=\"btbkyc\" style={{ display: \"inline\" }}>\n                    <input\n                        style={{ padding: \"5px\", width: \"60%\", marginInline: \"5px\" }}\n                        type=\"number\"\n                        placeholder=\"ether\"\n                        step=\"0.01\"\n                        value={quantityValue}\n                        onChange={handleInputCostChange}\n                    />\n                    <button\n                        onClick={BuyTokens} style={{ display: \"inline-block\", padding: \"6px\", width: \"33%\", backgroundColor: \"green\", color: \"white\", marginInline: \"5px\", cursor: \"pointer\", border: \"1px solid black\", borderRadius: \"3px\" }}>\n                        Buy\n                    </button>\n                </div>\n\n\n                <div className=\"balance\" style={{ padding: \"5px\", marginTop: \"10px\" }}>\n                    <strong>  Balance: {balanceValue} BLKT </strong>\n                </div>\n\n                <hr />\n                <h3 style={{ marginTop: \"16px\", marginBottom: \"16px\" }}> Send Tokens</h3>\n                <div className=\"btbkyc\" style={{ display: \"inline\" }}>\n                    <input\n                        style={{ padding: \"5px\", width: \"35%\", marginInline: \"5px\" }}\n                        type=\"string\"\n                        placeholder=\"address 0x00\"\n                        value={toAddressValue}\n                        onChange={handleInputToAddressChange}\n                    />\n                    <input\n                        style={{ padding: \"5px\", width: \"20%\", marginInline: \"5px\" }}\n                        type=\"number\"\n                        placeholder=\"BLKT\"\n                        step=\"1\"\n                        value={toAmountValue}\n                        onChange={handleInputToAmountChange}\n                    />\n\n                    <button\n                        onClick={transfer} style={{ display: \"inline-block\", padding: \"6px\", width: \"33%\", backgroundColor: \"green\", color: \"white\", marginInline: \"5px\", cursor: \"pointer\", border: \"1px solid black\", borderRadius: \"3px\" }}>\n                        Send\n                    </button>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default BLKTokenSale;\n","import { useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport useEth from \"../../contexts/EthContext/useEth\";\n\n\nfunction BLKTokenKYC({ setAddressesValue }) {\n    const notifySuccess = (message) => toast(message, {\n        style: {\n            border: '2px solid white',\n            color: \"white\",\n            background: \"green\"\n        },\n    });\n    \n    const notifyError = (message) => toast(message, {\n        style: {\n            border: '2px solid white',\n            color: \"white\",\n            background: \"red\"\n        },\n    });\n\n    const { state: { contractInstances, accounts } } = useEth();\n    const BLKTokenKYC = contractInstances.BLKTokenKYC;\n    const [addressValue, setAddressValue] = useState(\"\");\n\n    const handleInputAddressChange = e => {\n        setAddressValue(e.target.value);\n    };\n\n    const clearForm = () => {\n        setAddressValue(\"\")\n    }\n\n    const allow = async e => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n\n        if (addressValue === \"\") {\n            alert(\"Please enter a string to address.\");\n            return;\n        }\n        try {\n            await BLKTokenKYC.contract.methods.completed(addressValue).send({ from: accounts[0] });\n            getListOfTokens();\n        } catch (error) {\n            notifyError(error.message)\n        } finally {\n            clearForm();\n        }\n\n    };\n\n    const revoke = async e => {\n        if (e.target.tagName === \"INPUT\") {\n            return;\n        }\n\n        if (addressValue === \"\") {\n            alert(\"Please enter a string to address.\");\n            return;\n        }\n\n        try {\n            await BLKTokenKYC.contract.methods.revoked(addressValue).send({ from: accounts[0] });\n            getListOfTokens();\n        } catch (error) {\n            notifyError(error.message)\n        } finally {\n            clearForm();\n        }\n    };\n\n    async function getListOfTokens() {\n        const addresses = await BLKTokenKYC.contract.methods.getListOfAddress().call();\n        notifySuccess(\"List of address updated\");\n        setAddressesValue(addresses);\n    }\n\n    return (\n        <div\n            style={{ width: \"90%\", border: \"1px solid black\", borderRadius: \"2px\", padding: \"10px\", marginRight: \"auto\", marginLeft: \"auto\", marginBottom: \"16px\" }}>\n            <div\n                style={{ width: \"96%\", borderRadius: \"2px\", padding: \"10px\", marginRight: \"auto\", marginLeft: \"auto\", marginBottom: \"16px\" }}>\n                <button\n                    onClick={getListOfTokens}\n                    style={{ float: \"right\", padding: \"6px\", minWidth: \"92px\", backgroundColor: \"blue\", color: \"white\", cursor: \"pointer\", border: \"1px solid black\", borderRadius: \"3px\" }}>\n                    Refresh List\n                </button>\n            </div>\n            <div style={{ textAlign: \"center\" }} >\n                <h3 style={{ textAlign: \"center\", margin: \"10px\", marginTop: \"36px\", marginBottom: \"16px\" }}>\n                    BLKToken KYC MANAGEMENT\n                </h3>\n\n                <input\n                    style={{ padding: \"5px\", width: \"60%\", marginInline: \"5px\" }}\n                    type=\"text\"\n                    placeholder=\"address 0x00\"\n                    value={addressValue}\n                    onChange={handleInputAddressChange}\n                />\n\n                <div className=\"btbkyc\" style={{ display: \"inline\" }}>\n                    <button\n                        onClick={allow} style={{ display: \"inline-block\", padding: \"6px\", width: \"15%\", backgroundColor: \"green\", color: \"white\", marginInline: \"5px\", cursor: \"pointer\", border: \"1px solid black\", borderRadius: \"3px\" }}>\n                        Allow\n                    </button>\n                    <button\n                        onClick={revoke} style={{ display: \"inline-block\", padding: \"6px\", width: \"15%\", backgroundColor: \"red\", color: \"white\", marginInline: \"5px\", cursor: \"pointer\", border: \"1px solid black\", borderRadius: \"3px\" }}>\n                        Revoke\n                    </button>\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default BLKTokenKYC;\n","function Title() {\n    return <div style={ { textAlign: \"center\", marginBottom: \"16px\"}}>\n        <h1>Crowdsale</h1>\n        <h2 >Clube do Blockchain<br /> <span style={{ color: \"red\" }} > (Demo)</span></h2>\n        </div>;\n}\n\nexport default Title;\n","function AddressList({ addresses }) {\n    const truncate = (str, n) => {\n        return (str.length > n) ? str.slice(0, n) + ' ... ' + str.slice(str.length - n, str.length) : str;\n    };\n\n    function copyTextToClipboard(text) {\n        if (!navigator.clipboard) {\n            return;\n        }\n        navigator.clipboard.writeText(text).then(function () {\n            alert(' Address copied to clipboard!');\n        }, function (err) {\n            console.log('Async: Could not copy text: ', err);\n        });\n    }\n\n    const copyText = (e) => {\n        let el = e.target.children[0];\n        copyTextToClipboard(el.innerText);\n    }\n\n    const listItems = addresses.map((number) =>\n        <li\n            style={{ pointerEvents: \"cursor\" }}\n            onClick={copyText} value={number} key={number}> {truncate(number, 6)}\n            <span hidden>{number}</span>\n\n        </li>\n    );\n    return (\n        <div style={{ marginLeft: \"auto\", marginRight: \"auto\", textAlign: \"center\", marginTop: \"16px\" }}>\n            <div style={{ marginTop: \"16px\", marginBottom: \"16px\" }} > List of allowed (Click to Copy)\n                <br />\n                Total: {addresses.length}\n            </div>\n            <ul style={{ listStyleType: \"none\" }}>{listItems}</ul>\n        </div>\n\n    );\n}\n\nexport default AddressList","import useEth from \"../../contexts/EthContext/useEth\";\n\nimport BLKTokenSale from \"./BLKTokenSale\";\nimport BLKTokenKYC from \"./BLKTokenKYC\";\nimport Title from \"./Title\";\nimport { useState } from \"react\";\nimport AddressList from \"./AddressList\";\n\nfunction Demo() {\n  const { state } = useEth();\n  const [addressesValue, setAddressesValue] = useState([]);\n\n  const kyc =\n    <>\n      <div className=\"contract-container\">\n        <BLKTokenKYC setAddressesValue={setAddressesValue}/>\n      </div>\n    </>;\n  \n  const sale =\n    <>\n      <div className=\"contract-container\">\n        <BLKTokenSale/>\n      </div>\n    </>;\n  \n  const blkSaleIsLoaded = () => {\n    return state.contractInstances?.BLKTokenSale?.artifact;\n  }\n\n  const blkSaleKYCLoaded = () => {\n    return state.contractInstances?.BLKTokenKYC?.artifact;\n  }\n\n  const getAddresses = () => {\n    return addressesValue.length > 0 ? addressesValue : []\n  }\n\n  return (\n    <div className=\"demo\">\n      <Title />\n      {\n        !blkSaleKYCLoaded() ? \"Rendering KYC...\" : kyc\n      }\n      \n      {\n        !blkSaleIsLoaded() ? \"Rendering Sale...\" : sale\n      }\n      {\n        getAddresses().length > 0 ? <AddressList addresses={getAddresses()} /> : <div style={{ textAlign: \"center\", marginTop: \"16px\"}}> List of allowed addresses </div>\n      }\n    </div>\n  );\n}\n\nexport default Demo;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Demo from \"./components/Demo\";\nimport \"./App.css\";\nimport { Toaster } from 'react-hot-toast';\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <hr />\n          <Demo />\n          <Toaster></Toaster>\n          <hr />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}